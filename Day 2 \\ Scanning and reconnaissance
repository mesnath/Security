"produced from publicly available information that is collected, exploited, and disseminated in a timely manner to an appropriate audience or addressing a specific intelligence requirement"
"todays scans will build tomorrow ops"

data to collect
  web data
    cached content, analytics, proxy web application, command line interrogation
  sensitive data
    business data, profiles, non-profits/charities, business filings, historical and public listings
  publicly accessible
    physical addresses, phone numbers, emails, usernames, search engine data, web and traffic cameras, wireless access point data
  social media
    twitter, facebook, instagram, people searches, registry and wish lists
  domain and ip data
    dns registration, IP address assignmnets, geolocation data, whois
advanced scanning techniques
  host discovery
    find hosts that are onlin
    ping sweeps, etc
  port enumeration
    find ports for each host that is online
    posrt scans
  port interrogation
    find what service (and versions of the services) is running on each open/available port
  nmap scripting engine
    uses more advanced/nuanced applications of nmap
    can be a very noisy
    main benefits:
      network discovery
      sophisticated version detection
      vulnerability detection
      backdoor detection
      vulnerability exploitation
      /usr/share/nmap/scripts on linops

data collection through scraping - demo notes
  insertNotesHere

advanced scanning techniques - demo notes
  cat /usr/share/nmap/scripts/weblogic-t3-info.nse
  nmap --script-help http-enum
  nmap --script http-enum 10.50.45.252
    add what need to notes

nmap familiarization - demo notes
  nmap --help

control sockets
  tunnels
    ssh student@jump -L 2222:target:22
      opens 2222 port on your machine leading to port 22 on the tagret machine
    ssh student23@127.0.0.1 -D 9050
  ssh -M -S /tmp/jump -o StrictHostKeyChecking=no -o UserknownHostsFile=/dev/null student23@10.50.43.159
    (ssh make socket in /tmp called jump, tell ssh to stop being a bitch with the two -o's (turns off key checking) for the user student23 on 10.50.43.159
  ssh -S /tmp/jump user@ip
    connect to user on ip for jump with the socket we made earlier
    you don't have to have a specific user@ip, just need to have SOMETHIng in the destination spot for ssh or syntax has an aneurysm
  ssh -S /tmp/jump user@ip -O forward -L 2222:192.168.0.10:22
    -O means options THAT'S when you put in your tunnel options, if nothing pops up, something happened
  ***DON'T KILL ORIGINAL SESSION OR IT ALL GOES AWAY***
  ssh -M -S /tmp/T2 -p 2222 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null student12@127.0.0.1
    can use scp with ssh sockets
      scp -o ControlPath=/tmp/jump user@ip:/etc/passwd /tmp/passwd
        similar to regular scp syntax, you just have to use -o and set the controlpath to the name of your socket
  ssh -S /tmp/jump user@ip -O forward -D 9050
    creates a dynamic tunnel/port forward
  proxychains nmap -pN -sT -p 80 192.168.0.10 2>/dev/null
  ssh -S /tmp/jump user@ip -O cancel -D 9050
    kils the dynamic. can use to kill any of them but just change forward to cancel in other tunnels
